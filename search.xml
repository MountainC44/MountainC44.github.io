<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>世界与你，从心开始</title>
      <link href="/2018/07/19/%E4%B8%96%E7%95%8C%E4%B8%8E%E4%BD%A0%EF%BC%8C%E4%BB%8E%E5%BF%83%E5%BC%80%E5%A7%8B/"/>
      <url>/2018/07/19/%E4%B8%96%E7%95%8C%E4%B8%8E%E4%BD%A0%EF%BC%8C%E4%BB%8E%E5%BF%83%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="世界与你，从心开始"><a href="#世界与你，从心开始" class="headerlink" title="世界与你，从心开始"></a>世界与你，从心开始</h1><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fve3ohiwyxj31k00yina3.jpg" height="400px" width="700px"></p><ul><li><h4 id="GitHub：https-github-com-MountainC44-CMHSP-APP"><a href="#GitHub：https-github-com-MountainC44-CMHSP-APP" class="headerlink" title="GitHub：https://github.com/MountainC44/CMHSP-APP"></a>GitHub：<a href="https://github.com/MountainC44/CMHSP-APP" target="_blank" rel="noopener">https://github.com/MountainC44/CMHSP-APP</a></h4></li><li><h4 id="项目链接：http-39-104-125-71-8080-showfromtheheart-index-html"><a href="#项目链接：http-39-104-125-71-8080-showfromtheheart-index-html" class="headerlink" title="项目链接：http://39.104.125.71:8080/showfromtheheart/index.html"></a>项目链接：<a href="http://39.104.125.71:8080/showfromtheheart/index.html" target="_blank" rel="noopener">http://39.104.125.71:8080/showfromtheheart/index.html</a></h4><p>现代社会人们普遍都有很大的精神压力，而巨大的精神压力得不到释放与缓解，导致人们产生各种心理疾病，生活处于亚健康状态。从心开始WebApp正是针对这一社会问题，给有需要心里疏导和心理疾病缓解需求的人们提供一个心理健康综合服务平台。主要提供以下五大功能：专业心里测试、社区互动交流、情感音乐释放、专家文章书籍指导、个人测评图表分析。</p><p>项目技术栈：Angular.js、Ionic、Echarts、SpringBoot、SpringSecurity、JWT、MySQL、MongoDB、Git</p><p>协作工具：Teambition、ShowDoc</p></li></ul><h2 id="1、引导页"><a href="#1、引导页" class="headerlink" title="1、引导页"></a>1、引导页</h2><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fve3qgjvv8j31jy14i4bp.jpg" height="480px" width="700px"></p><ul><li><h5 id="引导页主要在用户第一次打开app时展现，使用LocalStorage实现"><a href="#引导页主要在用户第一次打开app时展现，使用LocalStorage实现" class="headerlink" title="引导页主要在用户第一次打开app时展现，使用LocalStorage实现"></a>引导页主要在用户第一次打开app时展现，使用LocalStorage实现</h5></li></ul><h2 id="2、登陆注册"><a href="#2、登陆注册" class="headerlink" title="2、登陆注册"></a>2、登陆注册</h2><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fve3qror6lj31ju14atkh.jpg" height="460px" width="700px"></p><ul><li><h5 id="登陆注册使用JWT的认证方式来完成ShowDoc接口文档查看"><a href="#登陆注册使用JWT的认证方式来完成ShowDoc接口文档查看" class="headerlink" title="登陆注册使用JWT的认证方式来完成ShowDoc接口文档查看"></a>登陆注册使用JWT的认证方式来完成<a href="https://www.showdoc.cc/page/440005281336899" target="_blank" rel="noopener">ShowDoc接口文档查看</a></h5></li></ul><h2 id="3、专业心理健康测试"><a href="#3、专业心理健康测试" class="headerlink" title="3、专业心理健康测试"></a>3、专业心理健康测试</h2><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fve3qyhk3ij31k40zw1eo.jpg" height="450px" width="700px"></p><ul><li><h5 id="使用小助手问答的形式来进行测试，测试题目目前有三套（抑郁症、焦虑症），测试题目全部从网上专业测试机构收集整理得出，主要功能有："><a href="#使用小助手问答的形式来进行测试，测试题目目前有三套（抑郁症、焦虑症），测试题目全部从网上专业测试机构收集整理得出，主要功能有：" class="headerlink" title="使用小助手问答的形式来进行测试，测试题目目前有三套（抑郁症、焦虑症），测试题目全部从网上专业测试机构收集整理得出，主要功能有："></a>使用小助手问答的形式来进行测试，测试题目目前有三套（抑郁症、焦虑症），测试题目全部从网上专业测试机构收集整理得出，主要功能有：</h5><ul><li>题目问答测试</li><li>查看测试结果</li><li>选择不同测试类型题目</li></ul></li><li><p><a href="https://www.showdoc.cc/page/442821862991105" target="_blank" rel="noopener">ShowDoc接口文档查看</a></p></li></ul><h2 id="4、社区互动交流"><a href="#4、社区互动交流" class="headerlink" title="4、社区互动交流"></a>4、社区互动交流</h2><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fve3r5h82dj31bc0xw19n.jpg" height="480px" width="700px"></p><ul><li><h5 id="社区功能模仿微博，提供一个交流分享平台，主要功能有："><a href="#社区功能模仿微博，提供一个交流分享平台，主要功能有：" class="headerlink" title="社区功能模仿微博，提供一个交流分享平台，主要功能有："></a>社区功能模仿微博，提供一个交流分享平台，主要功能有：</h5><ul><li>发布动态（图片、文字）</li><li>查看动态（点击进入详情页）</li><li>动态评论</li><li>动态收藏</li><li>上拉加载</li><li>下拉刷新</li></ul></li><li><p><a href="https://www.showdoc.cc/cmhsp?page_id=440007694211625" target="_blank" rel="noopener">ShowDoc接口文档查看</a></p></li></ul><h2 id="5、情感音乐释放"><a href="#5、情感音乐释放" class="headerlink" title="5、情感音乐释放"></a>5、情感音乐释放</h2><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fve3rbmgt3j31bg0xctvz.jpg" height="480px" width="700px"></p><ul><li><h5 id="提供一个音乐播放器功能，根据不同情感播放音乐（目前只有五种情感）主要功能有："><a href="#提供一个音乐播放器功能，根据不同情感播放音乐（目前只有五种情感）主要功能有：" class="headerlink" title="提供一个音乐播放器功能，根据不同情感播放音乐（目前只有五种情感）主要功能有："></a>提供一个音乐播放器功能，根据不同情感播放音乐（目前只有五种情感）主要功能有：</h5><ul><li>播放</li><li>暂停</li><li>上一首</li><li>下一首</li><li>收藏</li></ul></li><li><p><a href="https://www.showdoc.cc/cmhsp?page_id=440007694211625" target="_blank" rel="noopener">ShowDoc接口文档查看</a></p></li></ul><h2 id="6、专家文章书籍指导"><a href="#6、专家文章书籍指导" class="headerlink" title="6、专家文章书籍指导"></a>6、专家文章书籍指导</h2><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fve3rj2t70j31bc0y6kde.jpg" height="480px" width="700px"></p><ul><li><h5 id="提供心理健康类书籍、文章阅读，主要功能有："><a href="#提供心理健康类书籍、文章阅读，主要功能有：" class="headerlink" title="提供心理健康类书籍、文章阅读，主要功能有："></a>提供心理健康类书籍、文章阅读，主要功能有：</h5><ul><li>心理健康类书籍、文章推荐</li><li>点击更多查看书籍/文章列表</li><li>可对书名、文章名、作者搜索</li><li>可进行收藏</li></ul></li><li><p><a href="https://www.showdoc.cc/cmhsp?page_id=440007694211625" target="_blank" rel="noopener">ShowDoc接口文档查看</a></p></li></ul><h2 id="7、个人测评图表分析"><a href="#7、个人测评图表分析" class="headerlink" title="7、个人测评图表分析"></a>7、个人测评图表分析</h2><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fve3rox4isj31bk12wqo8.jpg" height="550px" width="700px"></p><ul><li><h5 id="个人信息模块，主要功能有："><a href="#个人信息模块，主要功能有：" class="headerlink" title="个人信息模块，主要功能有："></a>个人信息模块，主要功能有：</h5><ul><li>我的消息：评论消息、系统消息</li><li>个人设置：性别、年龄、头像、地区</li><li>测试记录查看</li><li>个人分析：使用图表把用户所有测试结果分析以数据可视化的方式展现</li><li>个人收藏查看：查看收藏的动态、音乐、书籍或文章</li><li>推出登陆</li></ul></li><li><p><a href="https://www.showdoc.cc/cmhsp?page_id=440007694211625" target="_blank" rel="noopener">ShowDoc接口文档查看</a></p></li></ul><h2 id="8、结尾"><a href="#8、结尾" class="headerlink" title="8、结尾"></a>8、结尾</h2><ul><li><h5 id="经历两个月的时间，项目从0到1，现在已经上线，还有很多不足，不断前进，不断进步！"><a href="#经历两个月的时间，项目从0到1，现在已经上线，还有很多不足，不断前进，不断进步！" class="headerlink" title="经历两个月的时间，项目从0到1，现在已经上线，还有很多不足，不断前进，不断进步！"></a>经历两个月的时间，项目从0到1，现在已经上线，还有很多不足，不断前进，不断进步！</h5></li></ul><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fve3ruuqflj319a0pgwhm.jpg" height="400px" width="700px"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Ionic Angularjs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对Angular模块的理解</title>
      <link href="/2018/05/16/%E5%AF%B9Angular%E6%A8%A1%E5%9D%97%E7%9A%84%E7%90%86%E8%A7%A3/"/>
      <url>/2018/05/16/%E5%AF%B9Angular%E6%A8%A1%E5%9D%97%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Angular模块简介"><a href="#Angular模块简介" class="headerlink" title="Angular模块简介"></a>Angular模块简介</h1><p>Angular 应用是模块化的，它拥有自己的模块化系统，称作 <em>NgModule</em>。 一个 NgModule 就是一个容器，用于存放一些内聚的代码块，这些代码块专注于某个应用领域、某个工作流或一组紧密相关的功能。 它可以包含一些组件、服务提供商或其它代码文件，其作用域由包含它们的 NgModule 定义。 它还可以导入一些由其它模块中导出的功能，并导出一些指定的功能供其它 NgModule 使用。</p><p>每个 Angular 应用都至少有一个 NgModule 类，也就是<a href="https://www.angular.cn/guide/bootstrapping" target="_blank" rel="noopener">根模块</a>，它习惯上命名为 <code>AppModule</code>，并位于一个名叫 <code>app.module.ts</code>的文件中。<em>引导</em>这个根模块就可以启动你的应用。</p><p>虽然小型的应用可能只有一个 NgModule，不过大多数应用都会有很多<em>特性模块</em>。应用的<em>根模块</em>之所以叫根模块，是因为它可以包含任意深度的层次化子模块。</p><h2 id="NgModule-元数据"><a href="#NgModule-元数据" class="headerlink" title="@NgModule 元数据"></a><code>@NgModule</code> 元数据</h2><p>NgModule 是一个带有 <code>@NgModule</code> 装饰器的类。<code>@NgModule</code> 装饰器是一个函数，它接受一个元数据对象，该对象的属性用来描述这个模块。其中最重要的属性如下。</p><ul><li><code>declarations</code>（可声明对象表） —— 那些属于本 NgModule 的<a href="https://www.angular.cn/guide/architecture-components" target="_blank" rel="noopener">组件</a>、<em>指令</em>、<em>管道</em>。</li><li><code>exports</code>（导出表） —— 那些能在其它模块的<em>组件模板</em>中使用的可声明对象的子集。</li><li><code>imports</code>（导入表） —— 那些导出了<em>本</em>模块中的组件模板所需的类的其它模块。</li><li><code>providers</code> —— 本模块向全局服务中贡献的那些<a href="https://www.angular.cn/guide/architecture-services" target="_blank" rel="noopener">服务</a>的创建器。 这些服务能被本应用中的任何部分使用。（你也可以在组件级别指定服务提供商，这通常是首选方式。）</li><li><code>bootstrap</code> —— 应用的主视图，称为<em>根组件</em>。它是应用中所有其它视图的宿主。只有<em>根模块</em>才应该设置这个 <code>bootstrap</code> 属性。</li><li><code>entryComponents</code> —— 描述 entryComponents 时，我们需要先谈angular-cli的摇树优化，什么意思呢？当编译生产环境代码时 ng build –prod，angular-cli会自动对那一些完全没有被用到模板里的组件、管道等等自动排除掉，那怕是你在 declarations 声明过，这样才可以很大幅度减少文件大小。所以有一些组件的确不会出现在模板中，但又会用到，比如某个组件是放在模态框里面，而模态框则是通过动态加载的方式来初始化组件，这个时候这些组件如果不在 entryComponents 中定义的话就会被排除掉。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> angular </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>css图片居中方法总结</title>
      <link href="/2018/04/06/css%E5%9B%BE%E7%89%87%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2018/04/06/css%E5%9B%BE%E7%89%87%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="css图片居中-水平居中和垂直居中"><a href="#css图片居中-水平居中和垂直居中" class="headerlink" title="css图片居中(水平居中和垂直居中)"></a>css图片居中(水平居中和垂直居中)</h1><p>css图片居中分css图片水平居中和垂直居中两种情况，有时候还需要图片同时水平垂直居中，</p><p>下面分几种居中情况分别介绍:</p><h2 id="css图片水平居中"><a href="#css图片水平居中" class="headerlink" title="css图片水平居中"></a>css图片水平居中</h2><h3 id="1-利用margin-0-auto实现图片水平居中"><a href="#1-利用margin-0-auto实现图片水平居中" class="headerlink" title="1.利用margin: 0 auto实现图片水平居中"></a>1.利用margin: 0 auto实现图片水平居中</h3><p>利用margin: 0 auto实现图片居中就是在图片上加上css样式margin: 0 auto 如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center; width: 500px; border: green solid 1px;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">src</span>=<span class="string">"https://www.baidu.com/img/baidu_jgylogo3.gif"</span> <span class="attr">style</span>=<span class="string">"margin: 0 auto;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-利用文本的水平居中属性text-align-center"><a href="#2-利用文本的水平居中属性text-align-center" class="headerlink" title="2.利用文本的水平居中属性text-align: center"></a>2.利用文本的水平居中属性text-align: center</h3><p>代码如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center; width: 500px; border: green solid 1px;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">src</span>=<span class="string">"https://www.baidu.com/img/baidu_jgylogo3.gif"</span> <span class="attr">style</span>=<span class="string">"display: inline-block;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="css图片垂直居中"><a href="#css图片垂直居中" class="headerlink" title="css图片垂直居中"></a>css图片垂直居中</h2><h3 id="1-利用高-行高实现图片垂直居中"><a href="#1-利用高-行高实现图片垂直居中" class="headerlink" title="1.利用高==行高实现图片垂直居中"></a>1.利用高==行高实现图片垂直居中</h3><p>这种方法是要注明高度才可以使用，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center; width: 500px;height:200px; line-height:200px; border: green solid 1px;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">src</span>=<span class="string">"https://www.baidu.com/img/baidu_jgylogo3.gif"</span> <span class="attr">style</span>=<span class="string">"display: inline-block; vertical-align: middle;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-利用table实现图片垂直居中"><a href="#2-利用table实现图片垂直居中" class="headerlink" title="2.利用table实现图片垂直居中"></a>2.利用table实现图片垂直居中</h3><p>利用table的方法是利用了table的垂直居中属性，代码如下：</p><p>这里使用display: table;和display: table-cell;来模拟table，这种方法并不<a href="http://www.51xuediannao.com/tags.php?/%E5%85%BC%E5%AE%B9IE6/" target="_blank" rel="noopener">兼容IE6</a>/IE7，IE67不支持display: table，如果你不需要支持IE67那就可以用</p><p>缺点：当你设置了display: table;可能会改变你的原有布局</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center; width: 500px;height:200px; display: table;border: green solid 1px;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"display: table-cell; vertical-align: middle; "</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">src</span>=<span class="string">"https://www.baidu.com/img/baidu_jgylogo3.gif"</span> <span class="attr">style</span>=<span class="string">"display: inline-block;"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-利用绝对定位实现图片垂直居中"><a href="#3-利用绝对定位实现图片垂直居中" class="headerlink" title="3.利用绝对定位实现图片垂直居中"></a>3.利用绝对定位实现图片垂直居中</h3><p>如果已知图片的宽度和高度可以这样，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 500px;height:200px; position: relative; border: green solid 1px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">src</span>=<span class="string">"https://www.baidu.com/img/baidu_jgylogo3.gif"</span> <span class="attr">style</span>=<span class="string">"width: 120px; height: 40px;position: absolute; left:50%; top: 50%; margin-left: -60px;margin-top: -20px;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-移动端可以利用flex布局实现css图片垂直居中"><a href="#4-移动端可以利用flex布局实现css图片垂直居中" class="headerlink" title="4.移动端可以利用flex布局实现css图片垂直居中"></a>4.移动端可以利用flex布局实现css图片垂直居中</h3><p>移动端一般浏览器版本都比较高，所以可以大胆的使用flex布局，（flex布局参考<a href="http://www.51xuediannao.com/html+css/htmlcssjq/flex1.html" target="_blank" rel="noopener">css3的flex布局用法</a>）演示代码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">CSS</span>代码：</span><br><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.ui-flex</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: -webkit-box <span class="meta">!important</span>;</span><br><span class="line">            <span class="attribute">display</span>: -webkit-flex <span class="meta">!important</span>;</span><br><span class="line">            <span class="attribute">display</span>: -ms-flexbox <span class="meta">!important</span>;</span><br><span class="line">            <span class="attribute">display</span>: flex <span class="meta">!important</span>;</span><br><span class="line">            <span class="attribute">-webkit-flex-wrap</span>: wrap;</span><br><span class="line">            <span class="attribute">-ms-flex-wrap</span>: wrap;</span><br><span class="line">            <span class="attribute">flex-wrap</span>: wrap</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.ui-flex</span>, <span class="selector-class">.ui-flex</span> *, <span class="selector-class">.ui-flex</span> <span class="selector-pseudo">:after</span>, <span class="selector-class">.ui-flex</span> <span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">            <span class="attribute">box-sizing</span>: border-box</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.ui-flex</span><span class="selector-class">.justify-center</span> &#123;</span><br><span class="line">            <span class="attribute">-webkit-box-pack</span>: center;</span><br><span class="line">            <span class="attribute">-webkit-justify-content</span>: center;</span><br><span class="line">            <span class="attribute">-ms-flex-pack</span>: center;</span><br><span class="line">            <span class="attribute">justify-content</span>: center</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.ui-flex</span><span class="selector-class">.center</span> &#123;</span><br><span class="line">            <span class="attribute">-webkit-box-pack</span>: center;</span><br><span class="line">            <span class="attribute">-webkit-justify-content</span>: center;</span><br><span class="line">            <span class="attribute">-ms-flex-pack</span>: center;</span><br><span class="line">            <span class="attribute">justify-content</span>: center;</span><br><span class="line">            <span class="attribute">-webkit-box-align</span>: center;</span><br><span class="line">            <span class="attribute">-webkit-align-items</span>: center;</span><br><span class="line">            <span class="attribute">-ms-flex-align</span>: center;</span><br><span class="line">            <span class="attribute">align-items</span>: center</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">html代码：</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui-flex justify-center center"</span> <span class="attr">style</span>=<span class="string">"border: green solid 1px; width: 500px; height: 200px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cell"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">src</span>=<span class="string">"https://www.baidu.com/img/baidu_jgylogo3.gif"</span> <span class="attr">style</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>根据promiseA+实现一个自己的promise</title>
      <link href="/2018/02/12/%E6%A0%B9%E6%8D%AEpromiseA-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84promise/"/>
      <url>/2018/02/12/%E6%A0%B9%E6%8D%AEpromiseA-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84promise/</url>
      
        <content type="html"><![CDATA[<h2 id="根据promiseA-实现一个自己的promise"><a href="#根据promiseA-实现一个自己的promise" class="headerlink" title="根据promiseA+实现一个自己的promise"></a>根据promiseA+实现一个自己的promise</h2><h4 id="根据promise-A-规范原理，promise在自己的框架中，封装了一系列的内置的方法"><a href="#根据promise-A-规范原理，promise在自己的框架中，封装了一系列的内置的方法" class="headerlink" title="根据promise A+规范原理，promise在自己的框架中，封装了一系列的内置的方法"></a>根据promise A+规范原理，promise在自己的框架中，封装了一系列的内置的方法</h4><ul><li><p>捕获错误的方法 <strong>catch()</strong></p></li><li><p>解析全部方法 <strong>all()</strong></p></li><li><p>竞赛 <strong>race()</strong></p></li><li><p>生成一个成功的promise  <strong>resolve()</strong></p></li><li><p>生成一个失败的promise  <strong>reject()</strong></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">resolvePromise</span>(<span class="params">promise2,x,resolve,reject</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//判断x是不是promise</span></span><br><span class="line">    <span class="comment">//规范中规定：我们允许别人乱写，这个代码可以实现我们的promise和别人的promise 进行交互</span></span><br><span class="line">    <span class="keyword">if</span>(promise2 === x)&#123;<span class="comment">//不能自己等待自己完成</span></span><br><span class="line">        <span class="keyword">return</span> reject(<span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">'循环引用'</span>));</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// x是除了null以外的对象或者函数</span></span><br><span class="line">    <span class="keyword">if</span>(x !=<span class="literal">null</span> &amp;&amp; (<span class="keyword">typeof</span> x === <span class="string">'object'</span> || <span class="keyword">typeof</span> x === <span class="string">'function'</span>))&#123;</span><br><span class="line">        <span class="keyword">let</span> called;<span class="comment">//防止成功后调用失败</span></span><br><span class="line">        <span class="keyword">try</span>&#123;<span class="comment">//防止取then是出现异常  object.defineProperty</span></span><br><span class="line">            <span class="keyword">let</span> then = x.then;<span class="comment">//取x的then方法 &#123;then:&#123;&#125;&#125;</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> then === <span class="string">'function'</span>)&#123;<span class="comment">//如果then是函数就认为他是promise</span></span><br><span class="line">                <span class="comment">//call第一个参数是this，后面的是成功的回调和失败的回调</span></span><br><span class="line">                then.call(x,y =&gt; &#123;<span class="comment">//如果Y是promise就继续递归promise</span></span><br><span class="line">                    <span class="keyword">if</span>(called) <span class="keyword">return</span>;</span><br><span class="line">                    called = <span class="literal">true</span>;</span><br><span class="line">                    resolvePromise(promise2,y,resolve,reject)</span><br><span class="line">                &#125;,r =&gt; &#123; <span class="comment">//只要失败了就失败了</span></span><br><span class="line">                    <span class="keyword">if</span>(called) <span class="keyword">return</span>;</span><br><span class="line">                    called = <span class="literal">true</span>;</span><br><span class="line">                    reject(r);  </span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//then是一个普通对象，就直接成功即可</span></span><br><span class="line">                resolve(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (e)&#123;</span><br><span class="line">            <span class="keyword">if</span>(called) <span class="keyword">return</span>;</span><br><span class="line">            called = <span class="literal">true</span>;</span><br><span class="line">            reject(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;<span class="comment">//x = 123 x就是一个普通值 作为下个then成功的参数</span></span><br><span class="line">        resolve(x)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Promise</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span> (executor)&#123;</span><br><span class="line">        <span class="comment">//默认状态是等待状态</span></span><br><span class="line">        <span class="keyword">this</span>.status = <span class="string">'panding'</span>;</span><br><span class="line">        <span class="keyword">this</span>.value = <span class="literal">undefined</span>;</span><br><span class="line">        <span class="keyword">this</span>.reason = <span class="literal">undefined</span>;</span><br><span class="line">        <span class="comment">//存放成功的回调</span></span><br><span class="line">        <span class="keyword">this</span>.onResolvedCallbacks = [];</span><br><span class="line">        <span class="comment">//存放失败的回调</span></span><br><span class="line">        <span class="keyword">this</span>.onRejectedCallbacks = [];</span><br><span class="line">        <span class="keyword">let</span> resolve = <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;<span class="comment">//this指的是实例</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'pending'</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.value = data;</span><br><span class="line">                <span class="keyword">this</span>.status = <span class="string">"resolved"</span>;</span><br><span class="line">                <span class="keyword">this</span>.onResolvedCallbacks.forEach(<span class="function"><span class="params">fn</span> =&gt;</span> fn());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> reject = <span class="function">(<span class="params">reason</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'pending'</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.reason = reason;</span><br><span class="line">                <span class="keyword">this</span>.status = <span class="string">'rejected'</span>;</span><br><span class="line">                <span class="keyword">this</span>.onRejectedCallbacks.forEach(<span class="function"><span class="params">fn</span> =&gt;</span> fn());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>&#123;<span class="comment">//执行时可能会发生异常</span></span><br><span class="line">            executor(resolve,reject);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (e)&#123;</span><br><span class="line">            reject(e);<span class="comment">//promise失败了</span></span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    then(onFuiFilled,onRejected)&#123; </span><br><span class="line">        <span class="comment">//防止值得穿透 </span></span><br><span class="line">        onFuiFilled = <span class="keyword">typeof</span> onFuiFilled === <span class="string">'function'</span> ? onFuiFilled : <span class="function"><span class="params">y</span> =&gt;</span> y;</span><br><span class="line">        onRejected = <span class="keyword">typeof</span> onRejected === <span class="string">'function'</span> ? onRejected :<span class="function"><span class="params">err</span> =&gt;</span> &#123;<span class="keyword">throw</span> err;&#125;        </span><br><span class="line">        <span class="keyword">let</span> promise2;<span class="comment">//作为下一次then方法的promise</span></span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'resolved'</span>)&#123;</span><br><span class="line">           promise2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">               setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                  <span class="keyword">try</span>&#123;</span><br><span class="line">                        <span class="comment">//成功的逻辑 失败的逻辑</span></span><br><span class="line">                        <span class="keyword">let</span> x = onFuiFilled(<span class="keyword">this</span>.value);</span><br><span class="line">                        <span class="comment">//看x是不是promise 如果是promise取他的结果 作为promise2成功的的结果</span></span><br><span class="line">                        <span class="comment">//如果返回一个普通值，作为promise2成功的结果</span></span><br><span class="line">                        <span class="comment">//resolvePromise可以解析x和promise2之间的关系</span></span><br><span class="line">                        <span class="comment">//在resolvePromise中传入四个参数，第一个是返回的promise，第二个是返回的结果，第三个和第四个分别是resolve()和reject()的方法。</span></span><br><span class="line">                        resolvePromise(promise2,x,resolve,reject)</span><br><span class="line">                  &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">                        reject(e);</span><br><span class="line">                  &#125; </span><br><span class="line">               &#125;,<span class="number">0</span>)</span><br><span class="line">           &#125;); </span><br><span class="line">       &#125; </span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'rejected'</span>)&#123;</span><br><span class="line">            promise2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">                setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span>&#123;</span><br><span class="line">                        <span class="keyword">let</span> x = onRejected(<span class="keyword">this</span>.reason);</span><br><span class="line">                        <span class="comment">//在resolvePromise中传入四个参数，第一个是返回的promise，第二个是返回的结果，第三个和第四个分别是resolve()和reject()的方法。</span></span><br><span class="line">                        resolvePromise(promise2,x,resolve,reject)</span><br><span class="line">                    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">                        reject(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">            &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//当前既没有完成也没有失败</span></span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">this</span>.status === <span class="string">'pending'</span>)&#123;</span><br><span class="line">           promise2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">               <span class="comment">//把成功的函数一个个存放到成功回调函数数组中</span></span><br><span class="line">                <span class="keyword">this</span>.onResolvedCallbacks.push( <span class="function"><span class="params">()</span> =&gt;</span>&#123;</span><br><span class="line">                    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">try</span>&#123;</span><br><span class="line">                            <span class="keyword">let</span> x = onFuiFilled(<span class="keyword">this</span>.value);</span><br><span class="line">                            resolvePromise(promise2,x,resolve,reject);</span><br><span class="line">                        &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">                            reject(e);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,<span class="number">0</span>)</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">//把失败的函数一个个存放到失败回调函数数组中</span></span><br><span class="line">                <span class="keyword">this</span>.onRejectedCallbacks.push( <span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">try</span>&#123;</span><br><span class="line">                            <span class="keyword">let</span> x = onRejected(<span class="keyword">this</span>.reason);</span><br><span class="line">                            resolvePromise(promise2,x,resolve,reject)</span><br><span class="line">                        &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">                            reject(e)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,<span class="number">0</span>)</span><br><span class="line">                &#125;)</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> promise2;<span class="comment">//调用then后返回一个新的promise</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (onRejected) &#123;</span><br><span class="line">        <span class="comment">// catch 方法就是then方法没有成功的简写</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.then(<span class="literal">null</span>, onRejected);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Promise</span>.all = <span class="function"><span class="keyword">function</span> (<span class="params">promises</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//promises是一个promise的数组</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> arr = []; <span class="comment">//arr是最终返回值的结果</span></span><br><span class="line">        <span class="keyword">let</span> i = <span class="number">0</span>; <span class="comment">// 表示成功了多少次</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">processData</span>(<span class="params">index, data</span>) </span>&#123;</span><br><span class="line">            arr[index] = data;</span><br><span class="line">            <span class="keyword">if</span> (++i === promises.length) &#123;</span><br><span class="line">                resolve(arr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; promises.length; i++) &#123;</span><br><span class="line">            promises[i].then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                processData(i, data)</span><br><span class="line">            &#125;, reject)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只要有一个promise成功了 就算成功。如果第一个失败了就失败了</span></span><br><span class="line"><span class="built_in">Promise</span>.race = <span class="function"><span class="keyword">function</span> (<span class="params">promises</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; promises.length; i++) &#123;</span><br><span class="line">            promises[i].then(resolve,reject)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 生成一个成功的promise</span></span><br><span class="line"><span class="built_in">Promise</span>.resolve = <span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> resolve(value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 生成一个失败的promise</span></span><br><span class="line"><span class="built_in">Promise</span>.reject = <span class="function"><span class="keyword">function</span>(<span class="params">reason</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> reject(reason));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Promise</span>.defer = <span class="built_in">Promise</span>.deferred = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> dfd = &#123;&#125;;</span><br><span class="line">    dfd.promise = <span class="keyword">new</span> <span class="built_in">Promise</span>( <span class="function">(<span class="params">resolve, reject</span>) =&gt;</span>  &#123;</span><br><span class="line">        dfd.resolve = resolve;</span><br><span class="line">        dfd.reject = reject;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> dfd</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="built_in">Promise</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
